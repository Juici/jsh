// Markus Kuhn -- 2007-05-26 (Unicode 5.0)
//
// Permission to use, copy, modify, and distribute this software
// for any purpose and without fee is hereby granted. The author
// disclaims all warranties with regard to this software.
//
// Latest version: http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c
#[rustfmt::skip]
const COMBINING: [(char, char); 142] = [
    ('\u{0300}', '\u{036f}'), ('\u{0483}', '\u{0486}'), ('\u{0488}', '\u{0489}'),
    ('\u{0591}', '\u{05bd}'), ('\u{05bf}', '\u{05bf}'), ('\u{05c1}', '\u{05c2}'),
    ('\u{05c4}', '\u{05c5}'), ('\u{05c7}', '\u{05c7}'), ('\u{0600}', '\u{0603}'),
    ('\u{0610}', '\u{0615}'), ('\u{064b}', '\u{065e}'), ('\u{0670}', '\u{0670}'),
    ('\u{06d6}', '\u{06e4}'), ('\u{06e7}', '\u{06e8}'), ('\u{06ea}', '\u{06ed}'),
    ('\u{070f}', '\u{070f}'), ('\u{0711}', '\u{0711}'), ('\u{0730}', '\u{074a}'),
    ('\u{07a6}', '\u{07b0}'), ('\u{07eb}', '\u{07f3}'), ('\u{0901}', '\u{0902}'),
    ('\u{093c}', '\u{093c}'), ('\u{0941}', '\u{0948}'), ('\u{094d}', '\u{094d}'),
    ('\u{0951}', '\u{0954}'), ('\u{0962}', '\u{0963}'), ('\u{0981}', '\u{0981}'),
    ('\u{09bc}', '\u{09bc}'), ('\u{09c1}', '\u{09c4}'), ('\u{09cd}', '\u{09cd}'),
    ('\u{09e2}', '\u{09e3}'), ('\u{0a01}', '\u{0a02}'), ('\u{0a3c}', '\u{0a3c}'),
    ('\u{0a41}', '\u{0a42}'), ('\u{0a47}', '\u{0a48}'), ('\u{0a4b}', '\u{0a4d}'),
    ('\u{0a70}', '\u{0a71}'), ('\u{0a81}', '\u{0a82}'), ('\u{0abc}', '\u{0abc}'),
    ('\u{0ac1}', '\u{0ac5}'), ('\u{0ac7}', '\u{0ac8}'), ('\u{0acd}', '\u{0acd}'),
    ('\u{0ae2}', '\u{0ae3}'), ('\u{0b01}', '\u{0b01}'), ('\u{0b3c}', '\u{0b3c}'),
    ('\u{0b3f}', '\u{0b3f}'), ('\u{0b41}', '\u{0b43}'), ('\u{0b4d}', '\u{0b4d}'),
    ('\u{0b56}', '\u{0b56}'), ('\u{0b82}', '\u{0b82}'), ('\u{0bc0}', '\u{0bc0}'),
    ('\u{0bcd}', '\u{0bcd}'), ('\u{0c3e}', '\u{0c40}'), ('\u{0c46}', '\u{0c48}'),
    ('\u{0c4a}', '\u{0c4d}'), ('\u{0c55}', '\u{0c56}'), ('\u{0cbc}', '\u{0cbc}'),
    ('\u{0cbf}', '\u{0cbf}'), ('\u{0cc6}', '\u{0cc6}'), ('\u{0ccc}', '\u{0ccd}'),
    ('\u{0ce2}', '\u{0ce3}'), ('\u{0d41}', '\u{0d43}'), ('\u{0d4d}', '\u{0d4d}'),
    ('\u{0dca}', '\u{0dca}'), ('\u{0dd2}', '\u{0dd4}'), ('\u{0dd6}', '\u{0dd6}'),
    ('\u{0e31}', '\u{0e31}'), ('\u{0e34}', '\u{0e3a}'), ('\u{0e47}', '\u{0e4e}'),
    ('\u{0eb1}', '\u{0eb1}'), ('\u{0eb4}', '\u{0eb9}'), ('\u{0ebb}', '\u{0ebc}'),
    ('\u{0ec8}', '\u{0ecd}'), ('\u{0f18}', '\u{0f19}'), ('\u{0f35}', '\u{0f35}'),
    ('\u{0f37}', '\u{0f37}'), ('\u{0f39}', '\u{0f39}'), ('\u{0f71}', '\u{0f7e}'),
    ('\u{0f80}', '\u{0f84}'), ('\u{0f86}', '\u{0f87}'), ('\u{0f90}', '\u{0f97}'),
    ('\u{0f99}', '\u{0fbc}'), ('\u{0fc6}', '\u{0fc6}'), ('\u{102d}', '\u{1030}'),
    ('\u{1032}', '\u{1032}'), ('\u{1036}', '\u{1037}'), ('\u{1039}', '\u{1039}'),
    ('\u{1058}', '\u{1059}'), ('\u{1160}', '\u{11ff}'), ('\u{135f}', '\u{135f}'),
    ('\u{1712}', '\u{1714}'), ('\u{1732}', '\u{1734}'), ('\u{1752}', '\u{1753}'),
    ('\u{1772}', '\u{1773}'), ('\u{17b4}', '\u{17b5}'), ('\u{17b7}', '\u{17bd}'),
    ('\u{17c6}', '\u{17c6}'), ('\u{17c9}', '\u{17d3}'), ('\u{17dd}', '\u{17dd}'),
    ('\u{180b}', '\u{180d}'), ('\u{18a9}', '\u{18a9}'), ('\u{1920}', '\u{1922}'),
    ('\u{1927}', '\u{1928}'), ('\u{1932}', '\u{1932}'), ('\u{1939}', '\u{193b}'),
    ('\u{1a17}', '\u{1a18}'), ('\u{1b00}', '\u{1b03}'), ('\u{1b34}', '\u{1b34}'),
    ('\u{1b36}', '\u{1b3a}'), ('\u{1b3c}', '\u{1b3c}'), ('\u{1b42}', '\u{1b42}'),
    ('\u{1b6b}', '\u{1b73}'), ('\u{1dc0}', '\u{1dca}'), ('\u{1dfe}', '\u{1dff}'),
    ('\u{200b}', '\u{200f}'), ('\u{202a}', '\u{202e}'), ('\u{2060}', '\u{2063}'),
    ('\u{206a}', '\u{206f}'), ('\u{20d0}', '\u{20ef}'), ('\u{302a}', '\u{302f}'),
    ('\u{3099}', '\u{309a}'), ('\u{a806}', '\u{a806}'), ('\u{a80b}', '\u{a80b}'),
    ('\u{a825}', '\u{a826}'), ('\u{fb1e}', '\u{fb1e}'), ('\u{fe00}', '\u{fe0f}'),
    ('\u{fe20}', '\u{fe23}'), ('\u{feff}', '\u{feff}'), ('\u{fff9}', '\u{fffb}'),
    ('\u{10a01}', '\u{10a03}'), ('\u{10a05}', '\u{10a06}'), ('\u{10a0c}', '\u{10a0f}'),
    ('\u{10a38}', '\u{10a3a}'), ('\u{10a3f}', '\u{10a3f}'), ('\u{1d167}', '\u{1d169}'),
    ('\u{1d173}', '\u{1d182}'), ('\u{1d185}', '\u{1d18b}'), ('\u{1d1aa}', '\u{1d1ad}'),
    ('\u{1d242}', '\u{1d244}'), ('\u{e0001}', '\u{e0001}'), ('\u{e0020}', '\u{e007f}'),
    ('\u{e0100}', '\u{e01ef}'),
];

#[inline]
fn is_combining(c: char) -> bool {
    match COMBINING.binary_search_by(|(_, c2)| c.cmp(c2)) {
        Ok(i) => c >= COMBINING[i].0,
        Err(i) => i < COMBINING.len() && c >= COMBINING[i].0,
    }
}

pub fn wcwidth(c: char) -> u16 {
    match c {
        '\0'..='\x1f' | '\u{007f}'..='\u{009f}' => 0, // Control character.
        c if is_combining(c) => 0,

        '\u{1100}'..='\u{115f}' // Hangul Jamo init. consonants.
        | '\u{2329}' | '\u{232a}'
        | '\u{2e80}'..='\u{303e}' | '\u{3040}'..='\u{a4cf}' // CJK ... Yi  (c != '\u{303f}').
        | '\u{ac00}'..='\u{d7a3}' // Hangul Syllables.
        | '\u{f900}'..='\u{faff}' // CJK Compatibility Ideographs.
        | '\u{fe10}'..='\u{fe19}' // Vertical Forms.
        | '\u{fe30}'..='\u{fe6f}' // CJK Compatibility Forms.
        | '\u{ff00}'..='\u{ff60}' // Fullwidth Forms.
        | '\u{ffe0}'..='\u{ffe6}' // Fullwidth Forms.
        | '\u{1f300}'..='\u{1f6ff}' // Reserved for historical Chinese scripts.
        | '\u{20000}'..='\u{2fffd}' // CJK Extensions.
        | '\u{30000}'..='\u{3fffd}' // Miscellaneous Symbols and Pictographs ... Geometric Shapes Extended.
        => 2,

        _ => 1,
    }
}

pub fn wcswidth(s: &str) -> u16 {
    s.chars().map(wcwidth).sum()
}
